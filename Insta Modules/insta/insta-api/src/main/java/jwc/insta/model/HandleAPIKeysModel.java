/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package jwc.insta.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the HandleAPIKeys service. Represents a row in the &quot;JWC_HandleAPIKeys&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>jwc.insta.model.impl.HandleAPIKeysModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>jwc.insta.model.impl.HandleAPIKeysImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see HandleAPIKeys
 * @generated
 */
@ProviderType
public interface HandleAPIKeysModel extends BaseModel<HandleAPIKeys> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a handle api keys model instance should use the {@link HandleAPIKeys} interface instead.
	 */

	/**
	 * Returns the primary key of this handle api keys.
	 *
	 * @return the primary key of this handle api keys
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this handle api keys.
	 *
	 * @param primaryKey the primary key of this handle api keys
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the handle api key ID of this handle api keys.
	 *
	 * @return the handle api key ID of this handle api keys
	 */
	public long getHandleAPIKeyId();

	/**
	 * Sets the handle api key ID of this handle api keys.
	 *
	 * @param handleAPIKeyId the handle api key ID of this handle api keys
	 */
	public void setHandleAPIKeyId(long handleAPIKeyId);

	/**
	 * Returns the handle name of this handle api keys.
	 *
	 * @return the handle name of this handle api keys
	 */
	@AutoEscape
	public String getHandleName();

	/**
	 * Sets the handle name of this handle api keys.
	 *
	 * @param handleName the handle name of this handle api keys
	 */
	public void setHandleName(String handleName);

	/**
	 * Returns the page key of this handle api keys.
	 *
	 * @return the page key of this handle api keys
	 */
	@AutoEscape
	public String getPageKey();

	/**
	 * Sets the page key of this handle api keys.
	 *
	 * @param pageKey the page key of this handle api keys
	 */
	public void setPageKey(String pageKey);

	/**
	 * Returns the api key of this handle api keys.
	 *
	 * @return the api key of this handle api keys
	 */
	@AutoEscape
	public String getApiKey();

	/**
	 * Sets the api key of this handle api keys.
	 *
	 * @param apiKey the api key of this handle api keys
	 */
	public void setApiKey(String apiKey);

	/**
	 * Returns the instagram widget flag of this handle api keys.
	 *
	 * @return the instagram widget flag of this handle api keys
	 */
	public boolean getInstagramWidgetFlag();

	/**
	 * Returns <code>true</code> if this handle api keys is instagram widget flag.
	 *
	 * @return <code>true</code> if this handle api keys is instagram widget flag; <code>false</code> otherwise
	 */
	public boolean isInstagramWidgetFlag();

	/**
	 * Sets whether this handle api keys is instagram widget flag.
	 *
	 * @param instagramWidgetFlag the instagram widget flag of this handle api keys
	 */
	public void setInstagramWidgetFlag(boolean instagramWidgetFlag);

}